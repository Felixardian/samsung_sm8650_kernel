name: Build and Release Samsung Kernels

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: true

jobs:
  build-kernel-24unext:
    uses: ./.github/workflows/Build-KernelSU-next.yml
    secrets: inherit
    with:
      model: "samsung24unext"
      soc: "pineapple"
      branch: "main"
      android_version: "android14"
      kernel_version: "6.1"

  build-kernel-24uLKM:
    uses: ./.github/workflows/KernelSU-LKM.yml
    secrets: inherit
    with:
      model: "samsung24ulkm"
      soc: "pineapple"
      branch: "main"
      android_version: "android14"
      kernel_version: "6.1"

  build-SukiSU-Ultrakernel-24u:
     uses: ./.github/workflows/Build-SukiSU-Ultra.yml
     secrets: inherit
     with:
      model: "samsung24usuki"
      soc: "pineapple"
      branch: "main"
      android_version: "android14"
      kernel_version: "6.1"

  trigger-release:
    runs-on: ubuntu-latest
    needs: [build-kernel-24unext, build-kernel-24uLKM, build-SukiSU-Ultrakernel-24u]
    if: ${{ inputs.make_release }}
    env:
      REPO_OWNER: Felixardian
      REPO_NAME: Samsung_KernelSU_SUSFS
      RELEASE_NAME: "*BUILD* Samsung Kernels With & SUSFS v1.5.5 *BUILD*"
      RELEASE_NOTES: |
        This release contains KernelSU and SUSFS v1.5.5
        
        Module: 
        -> https://github.com/sidex15/ksu_module_susfs
        
        KernelSUNext Managers:
        -> https://github.com/KernelSU-Next/KernelSU-Next

        KernelSU Managers:
        -> https://github.com/tiann/KernelSU


        SukiSU-Ultra Managers:
        -> https://github.com/ShirkNeko/SukiSU-Ultra
        
        Features:
        [+] KernelSU-Next
        [+] SukiSU-Ultra
        [+] KernelSULKM
        [+] SUSFS v1.5.5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Generate and Create New Tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v1.5.5-r0"
          fi
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV

          if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
            echo "Tag $NEW_TAG already exists. Skipping creation."
          else
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag $NEW_TAG
            git push origin $NEW_TAG
          fi

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Wait for GitHub release propagation
        run: sleep 10

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          prerelease: false
          release_name: ${{ env.RELEASE_NAME }}
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets Dynamically
        run: |
          for file in ./downloaded-artifacts/kernel-*/*; do
            if [ -f "$file" ]; then
              echo "Uploading $file..."
              gh release upload ${{ env.NEW_TAG }} "$file"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_TAG: ${{ env.NEW_TAG }}

      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts/**/*
